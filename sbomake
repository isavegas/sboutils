#!/bin/bash

DIRNAM=$(basename $PWD)

. /etc/sboutils.conf

SBO_TEMPLATE_AUTOTOOLS="no"
SBO_TEMPLATE_CMAKE="no"
SBO_TEMPLATE_HASKELL="no"
SBO_TEMPLATE_MESON="no"
SBO_TEMPLATE_PERL="no"
SBO_TEMPLATE_PYTHON="no"
SBO_TEMPLATE_RUBYGEM="no"
SBO_TEMPLATE_DOINST="no"
SBO_TEMPLATE_DOUNINST="no"
SBO_TEMPLATE_DESKTOP="no"

is_imput_empty(){
	if [ "$1" = "" ]; then
		echo "Input is empty. To view options, use `basename $0` --help"
		exit 1
	fi
}

check_folder() {
	if [ ! -d $1 ]; then
		echo "Folder '$1' does not exist."
		exit 1
	elif [ ! -w $1 ]; then
		echo "Folder '$1' not writable."
		exit 1
	elif [ ! -x $1 ] || [ ! -r $1 ]; then
		echo "Folder '$1' not readable."
		exit 1
	fi
}

check_if_file_exists(){
	if [ -f "$1" ]; then
		echo "A file called $1 already exists in $DIRNAM."
		exit 0
	fi
}

determine_template(){
	if [ "$SBO_TEMPLATE_AUTOTOOLS" = "yes" ]; then
		TEMPLATE="autotools-template"
	elif [ "$SBO_TEMPLATE_CMAKE" = "yes" ]; then
		TEMPLATE="cmake-template"
	elif [ "$SBO_TEMPLATE_HASKELL" = "yes" ]; then
		TEMPLATE="cmake-haskell"
	elif [ "$SBO_TEMPLATE_MESON" = "yes" ]; then
		TEMPLATE="meson-template"
	elif [ "$SBO_TEMPLATE_PERL" = "yes" ]; then
		TEMPLATE="perl-template"
	elif [ "$SBO_TEMPLATE_PYTHON" = "yes" ]; then
		TEMPLATE="python-template"
	elif [ "$SBO_TEMPLATE_RUBYGEM" = "yes" ]; then
		TEMPLATE="rubygem-template"
	fi
}

copy_template_file(){
	cp /usr/share/sboutils/templates/${1} ${2}
}

prepare_slackbuild_template(){
	YEAR=$(date +"%Y")
	sed -i "s:appname:$DIRNAM:g" $DIRNAM.SlackBuild
	sed -i "s:<year>:$YEAR:" $DIRNAM.SlackBuild
	sed -i "s:<you>:$MAINTAINER:" $DIRNAM.SlackBuild
	sed -i "s:<where you live>:$LOCATION:" $DIRNAM.SlackBuild
	sed -i '/# |--/,/# |--/d' $DIRNAM.SlackBuild
}

prepare_slackdesc_template(){
	EMPTY="$(printf '%*s' ${#PRGNAM})"
	sed -i "s:appname:$DIRNAM:g" slack-desc
	sed -i "s:       :$EMPTY:" slack-desc
}

prepare_info_template(){
	sed -i "s:name of application:$DIRNAM:" $DIRNAM.info
	sed -i "s:version of application::" $DIRNAM.info
	sed -i 's:homepage of application::' $DIRNAM.info
	sed -i 's:direct download link(s) of application source tarball(s), x86_64 only::' $DIRNAM.info
	sed -i 's:direct download link(s) of application source tarball(s) arch-independent or x86::' $DIRNAM.info
	sed -i 's:md5sum(s) of the source tarball(s) defined in DOWNLOAD_x86_64::' $DIRNAM.info
	sed -i 's:md5sum(s) of the source tarball(s) defined in DOWNLOAD::' $DIRNAM.info
	sed -i 's:%README%::' $DIRNAM.info
	sed -i "s:name of SlackBuild script maintainer:$MAINTAINER:" $DIRNAM.info
	sed -i "s:email address of author:$EMAIL:" $DIRNAM.info
}

helper() {
	echo "Run `basename $0` from within the SlackBuild folder."
	echo "Usage: `basename $0` [template] [option]"
	echo "Templates: auto (autotools), cmake, haskell, meson,"
	echo "           perl, python, ruby (rubygem)"
	echo "Options:"
	echo "  -di,  --doinst            copy doinst.sh file"
	echo "  -du,  --douninst          copy douninst.sh file"
	echo "  -de,  --desktop           copy template.desktop file"
	echo "  -h,   --help              print this help"
}

options(){
	while [ "$1" ]; do
		case $1 in
			auto)
				SBO_TEMPLATE_AUTOTOOLS="yes"
			;;
			cmake)
				SBO_TEMPLATE_CMAKE="yes"
			;;
			haskell)
				SBO_TEMPLATE_HASKELL="yes"
			;;
			meson)
				SBO_TEMPLATE_MESON="yes"
			;;
			perl)
				SBO_TEMPLATE_PERL="yes"
			;;
			python)
				SBO_TEMPLATE_PYTHON="yes"
			;;
			ruby)
				SBO_TEMPLATE_RUBYGEM="yes"
			;;
			-di|--doinst)
				SBO_TEMPLATE_DOINST="yes"
			;;
  			-du|--douninst)
				SBO_TEMPLATE_DOUNINST="yes"
			;;
			-de|--desktop)
				SBO_TEMPLATE_DESKTOP="yes"
			;;
			-h|--help)
				helper
				exit 0
			;;
			*)
				echo "Unknown option $1"
				exit 1
			;;
  		esac
	shift
	done
}

main(){
	options "$@"
	check_folder $PWD
	
	if [ "$SBO_TEMPLATE_DOINST" = "yes" ]; then
		check_if_file_exists doinst.sh
		copy_template_file doinst.sh doinst.sh
	fi
	
	if [ "$SBO_TEMPLATE_DOUNINST" = "yes" ]; then
		check_if_file_exists douninst.sh
		copy_template_file douninst.sh douninst.sh
	fi
	
	if [ "$SBO_TEMPLATE_DESKTOP" = "yes" ]; then
		check_if_file_exists $DIRNAM.desktop
		copy_template_file template.desktop $DIRNAM.desktop
	fi
		
	determine_template
	if [ ! -z "$TEMPLATE" ]; then
		# check if they exist, then copy
		check_if_file_exists README
		copy_template_file README README
		check_if_file_exists $DIRNAM.SlackBuild
		copy_template_file $TEMPLATE.SlackBuild $DIRNAM.SlackBuild
		check_if_file_exists $DIRNAM.info
		copy_template_file template.info $DIRNAM.info
		check_if_file_exists slack-desc
		copy_template_file slack-desc slack-desc
		# prepare templates
		prepare_slackbuild_template
		prepare_slackdesc_template
		prepare_info_template
		
		exit 0
	fi
	
	exit 0
}

is_imput_empty "$@"
main "$@"

# End of file
