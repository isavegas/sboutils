#!/bin/bash

# Is input empty?
if [ "$1" = "" ]; then
    echo "Input is empty. Usage: $(basename $0) [template...]"
    exit 1
fi

update_md5sum(){
	if [ ! -z "$DOWNLOAD" ] && [ ! "$DOWNLOAD" = "UNSUPPORTED" ] && [ ! "$DOWNLOAD" = "UNTESTED" ]; then
		for d in ${ARRAY_DOWNLOAD[@]}; do
			MD5SUM_UPDATE=$(md5sum `basename $d` | awk '{print $1}')
			MD5SUM_STACK+="$MD5SUM_UPDATE "
		done
  		ARRAY_MD5SUM=( $MD5SUM_STACK )
  		ARRAY_LAST=${#ARRAY_MD5SUM[@]}
		echo -e "$ARRAY_LAST MD5SUM sources, processing..."
  		LAST="$(( $ARRAY_LAST-2 ))"
		if [ "$ARRAY_LAST" = "0" ]; then
			echo -e "No MD5SUM sources, skipping..."
   		elif [ "$ARRAY_LAST" = "1" ]; then
			sed -i '/MD5SUM=/,/DOWNLOAD_x86_64=/{//!d}' $PRGNAM.info
			sed -i "/MD5SUM=/c\MD5SUM=\"${ARRAY_MD5SUM[0]}\"" $PRGNAM.info
   		elif [ "$ARRAY_LAST" = "2" ]; then
			sed -i '/MD5SUM=/,/DOWNLOAD_x86_64=/{//!d}' $PRGNAM.info
			sed -i "/MD5SUM=/c\MD5SUM=\"${ARRAY_MD5SUM[0]} \\\\" $PRGNAM.info
			sed -i "/DOWNLOAD_x86_64=/c${ARRAY_MD5SUM[-1]}\"\nDOWNLOAD_x86_64=" $PRGNAM.info
   		elif [ "$ARRAY_LAST" -gt "2" ]; then
			sed -i '/MD5SUM=/,/DOWNLOAD_x86_64=/{//!d}' $PRGNAM.info
			sed -i "/MD5SUM=/c\MD5SUM=\"${ARRAY_MD5SUM[0]} \\\\" $PRGNAM.info
			for e in ${ARRAY_MD5SUM[@]:1:$LAST}; do
				sed -i "/^DOWNLOAD_x86_64=/i $e \\\\" $PRGNAM.info
			done
			sed -i "/DOWNLOAD_x86_64=/c${ARRAY_MD5SUM[-1]}\"\nDOWNLOAD_x86_64=" $PRGNAM.info
		fi
	fi

	if [ ! -z "$DOWNLOAD_x86_64" ] && [ ! "$DOWNLOAD_x86_64" = "UNSUPPORTED" ] && [ ! "$DOWNLOAD_x86_64" = "UNTESTED" ]; then
		for d in ${ARRAY_DOWNLOAD_x86_64[@]}; do
			MD5SUM_x86_64_UPDATE=$(md5sum `basename $d` | awk '{print $1}')
			MD5SUM_x86_64_STACK+="$MD5SUM_x86_64_UPDATE "
		done
		ARRAY_MD5SUM_x86_64=( $MD5SUM_x86_64_STACK )
		ARRAY_x86_64_LAST=${#ARRAY_MD5SUM_x86_64[@]}
		echo -e "$ARRAY_x86_64_LAST MD5SUM_x86_64 sources, processing..."
		LAST_x86_64="$(( $ARRAY_x86_64_LAST-2 ))"
		if [ "$ARRAY_x86_64_LAST" = "0" ]; then
			echo -e "No MD5SUM_x86_64 sources, skipping..."
		elif [ "$ARRAY_x86_64_LAST" = "1" ]; then
			sed -i '/MD5SUM_x86_64=/,/REQUIRES=/{//!d}' $PRGNAM.info
			sed -i "/MD5SUM_x86_64=/c\MD5SUM_x86_64=\"${ARRAY_MD5SUM_x86_64[0]}\"" $PRGNAM.info
		elif [ "$ARRAY_x86_64_LAST" = "2" ]; then
			sed -i '/MD5SUM_x86_64=/,/REQUIRES=/{//!d}' $PRGNAM.info
			sed -i "/MD5SUM_x86_64=/c\MD5SUM_x86_64=\"${ARRAY_MD5SUM_x86_64[0]} \\\\" $PRGNAM.info
			sed -i "/REQUIRES=/c${ARRAY_MD5SUM_x86_64[-1]}\"\nREQUIRES=" $PRGNAM.info
		elif [ "$ARRAY_x86_64_LAST" -gt "2" ]; then
			sed -i '/MD5SUM_x86_64=/,/REQUIRES=/{//!d}' $PRGNAM.info
			sed -i "/MD5SUM_x86_64=/c\MD5SUM_x86_64=\"${ARRAY_MD5SUM_x86_64[0]} \\\\" $PRGNAM.info
			for e in ${ARRAY_MD5SUM_x86_64[@]:1:$LAST_x86_64}; do
				sed -i "/^REQUIRES=/i $e \\\\" $PRGNAM.info
			done
			sed -i "/REQUIRES=/c${ARRAY_MD5SUM[-1]}\"\nREQUIRES=" $PRGNAM.info
		fi
	fi
}

# 	if [ "$SBO_UPDATE_MD5SUM" = "yes" ]; then
# 		update_md5sum
# 		exit 0
# 	fi

# 	if [ "$SBO_DOWNLOAD_ONLY" = "yes" ]; then
# 		download_source
# 		exit 0
# 	fi

CONF=/etc/sboutils.conf
TEMPLATES=/usr/share/sboutils/templates

. $CONF

PRGNAM=$(basename $PWD)
EMPTY="$(printf '%*s' ${#PRGNAM})"
YEAR=$(date +"%Y")

prepare(){
cp $TEMPLATES/$template-template.SlackBuild $PRGNAM.SlackBuild
sed -i "s:appname:$PRGNAM:g" $PRGNAM.SlackBuild
sed -i "s:<year>:$YEAR:" $PRGNAM.SlackBuild
sed -i "s:<you>:$MAINTAINER:" $PRGNAM.SlackBuild
sed -i "s:<where you live>:$LOCATION:" $PRGNAM.SlackBuild

sed -i '/# |--/,/# |--/d' $PRGNAM.SlackBuild

cp $TEMPLATES/slack-desc slack-desc
sed -i "s:appname:$PRGNAM:g" slack-desc
sed -i "s:       :$EMPTY:" slack-desc

cp $TEMPLATES/template.info $PRGNAM.info
sed -i "s:name of application:$PRGNAM:" $PRGNAM.info
sed -i "s:version of application::" $PRGNAM.info
sed -i 's:homepage of application::' $PRGNAM.info
sed -i 's:direct download link(s) of application source tarball(s), x86_64 only::' $PRGNAM.info
sed -i 's:direct download link(s) of application source tarball(s) arch-independent or x86::' $PRGNAM.info
sed -i 's:md5sum(s) of the source tarball(s) defined in DOWNLOAD_x86_64::' $PRGNAM.info
sed -i 's:md5sum(s) of the source tarball(s) defined in DOWNLOAD::' $PRGNAM.info
sed -i 's:%README%::' $PRGNAM.info
sed -i "s:name of SlackBuild script maintainer:$MAINTAINER:" $PRGNAM.info
sed -i "s:email address of author:$EMAIL:" $PRGNAM.info
}

while [ "$1" ]; do
  case $1 in
  auto)
    template=autotools
    prepare
    ;;
    
  cmake)
    template=cmake
    prepare
    ;;
  
  haskell)
    template=haskell
    prepare
    ;;
    
  meson)
    template=meson
    prepare
    ;;
    
  perl)
    template=perl
    prepare
    ;;
    
  python)
    template=python
    prepare
    ;;
    
  ruby)
    template=rubygem
    prepare
    ;;
    
  -di)
    cp $TEMPLATES/doinst.sh .
    ;;

  -du)
    cp $TEMPLATES/douninst.sh .
    ;;
  
  -de)
    cp $TEMPLATES/template.desktop $PRGNAM.desktop
    ;;

  *)
    echo "Unknown template/option:"
    echo "Templates: auto, cmake, haskell, meson, perl, python, ruby"
    echo "Options: -di (doinst.sh), -du (douninst.sh), -de (desktop)"
    ;;
  
  esac
  shift
done


# 			-d|--download)
# 				SBO_DOWNLOAD="yes"
# 			;;
# 			-do|--download-only)
# 				SBO_DOWNLOAD_ONLY="yes"
# 			;;
# 			-um|--update-md5)
# 				SBO_UPDATE_MD5SUM="yes"
# 			;;