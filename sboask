#!/bin/bash

. /etc/sboutils.conf

SBO_INFO="no"
SBO_DEP="no"
SBO_DEPENDENTS="no"
SBO_FIND="no"

check_location(){
	if [ "$2" = "strict" ]; then
		LOCATION=$(cat $REPO/SLACKBUILDS.TXT | grep "/${1}$" | grep LOCATION | sed "s|SLACKBUILD LOCATION: ./||")
	else
		LOCATION=$(cat $REPO/SLACKBUILDS.TXT | grep -i "${1}" | grep LOCATION | sed "s|SLACKBUILD LOCATION: ./||")
	fi
	
	LOCATION_array=( $LOCATION )
	if [ "${#LOCATION_array[@]}" = "0" ] ; then
		echo "$1 not found on SlackBuilds.org! Exiting..."
		exit 1
	fi
}

location_search(){
	for i in ${LOCATION_array[@]}; do
		echo -e "$i"
	done
}

display_info(){
	. $REPO/$LOCATION/$1.info
	SHORTDESC=$(cat $REPO/$LOCATION/slack-desc | grep "${1}: ${1}" | sed "s|${1}: ||")
	CATEGORY=$(echo "$LOCATION" | sed "s:/$PRGNAM::")
	echo ""
	echo "$SHORTDESC"
	echo "Version:  $VERSION"
	echo "Category: $CATEGORY"
	echo "Homepage: $HOMEPAGE"

	echo ""
	cat $REPO/$LOCATION/README
	echo ""
	echo "--- direct dependencies: ([i] installed)"
}

display_requires(){
	requires_array=( $REQUIRES )

	for d in ${requires_array[@]}; do
		pkg=""
  
		# check if dependency ($d) is among installed pkgs
		installed=$(find /var/lib/pkgtools/packages/ -name "${d}-*" )
		installed_array=( $installed )
		if [ ! -z "$installed" ]; then
			for i in ${installed_array[@]}; do
				pkg+=$(echo "`basename ${i%-*-*-*}` ")
			done

			pkg_array=( $pkg )
			if [[ " ${pkg_array[*]} " =~ " ${d} " ]]; then
				echo "[i] $d"
			elif [[ ! " ${pkg_array[*]} " =~ " ${d} " ]]; then
				echo "[ ] $d"
			fi
		elif [ -z "$installed" ]; then
			echo "[ ] $d"
		fi
	done
}

helper() {
	echo "Usage: `basename $0` [task] SlackBuild"
	echo "Tasks:"
	echo "  info           display information about SlackBuild"
	echo "  dep            display dependencies chain for a SlackBuild"
	echo "  dependent      display what depends on a SlackBuild"
	echo "  find|search    search for a SlackBuild"         
	echo "  help           display this help message"
}

options(){
	case $1 in
		info)
			SBO_INFO="yes"
		;;
		dep)
			SBO_DEP="yes"
		;;
		dependents)
			SBO_DEPENDENTS="yes"
		;;
		find|search)
			SBO_FIND="yes"
		;;
		help)
			helper
			exit 0
		;;
		*)
			echo "Unknown option $1"
			exit 1
		;;
  	esac

}

main(){
	options "$1" "$2"
	
	if [ $SBO_INFO = "yes" ]; then
		check_location "$2" strict
		display_info "$2"
		display_requires "$2"
		exit 0
	fi
	if [ $SBO_FIND = "yes" ]; then
		check_location "$2" nonstrict
		location_search "$2" 
		exit 0
	fi
	exit 0
}

main "$1" "$2"
